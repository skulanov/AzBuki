// –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ü–µ—Ä–∫–æ–≤–Ω–æ-—Å–ª–∞–≤—è–Ω—Å–∫–æ–π –∞–∑–±—É–∫–∏

class ChurchSlavonicApp {
    constructor() {
        this.letters = churchSlavonicAlphabet;
        this.currentIndex = 0;
        this.isNameVisible = false;
        this.shuffledLetters = [];
        this.rememberedLetters = new Set(); // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∑–∞–ø–æ–º–Ω–µ–Ω–Ω—ã—Ö –±—É–∫–≤
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
        this.letterElement = document.getElementById('letter');
        this.letterNameElement = document.getElementById('letterName');
        this.flashcard = document.getElementById('flashcard');
        this.rememberBtn = document.getElementById('rememberBtn');

        
        this.init();
    }
    
    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã DOM –Ω–∞–π–¥–µ–Ω—ã
        if (!this.letterElement || !this.letterNameElement || !this.flashcard) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM');
            return;
        }
        
        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –±—É–∫–≤ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
        this.shuffleLetters();
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É
        this.displayCurrentLetter();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this.addEventListeners();
        
        console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ. –ë—É–∫–≤ –≤ –∞–∑–±—É–∫–µ:', this.letters.length);
        console.log('–ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞:', this.shuffledLetters[0]);
    }
    
    shuffleLetters() {
        // –§–∏–ª—å—Ç—Ä—É–µ–º –±—É–∫–≤—ã, –∏—Å–∫–ª—é—á–∞—è –∑–∞–ø–æ–º–Ω–µ–Ω–Ω—ã–µ
        const availableLetters = this.letters.filter((letter, index) => 
            !this.rememberedLetters.has(index)
        );
        
        // –ï—Å–ª–∏ –≤—Å–µ –±—É–∫–≤—ã –∑–∞–ø–æ–º–Ω–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (availableLetters.length === 0) {
            this.showCompletionMessage();
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—É–∫–≤ –∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
        this.shuffledLetters = [...availableLetters];
        for (let i = this.shuffledLetters.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [this.shuffledLetters[i], this.shuffledLetters[j]] = [this.shuffledLetters[j], this.shuffledLetters[i]];
        }
        
        console.log(`–ë—É–∫–≤—ã –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã. –î–æ—Å—Ç—É–ø–Ω–æ: ${availableLetters.length}, –∑–∞–ø–æ–º–Ω–µ–Ω–æ: ${this.rememberedLetters.size}`);
    }
    
    displayCurrentLetter() {
        const currentLetter = this.shuffledLetters[this.currentIndex];
        
        // –°–æ–∑–¥–∞–µ–º HTML —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –¥–ª—è –ø—Ä–æ–ø–∏—Å–Ω–æ–π –∏ —Å—Ç—Ä–æ—á–Ω–æ–π –±—É–∫–≤
        const upperSpan = `<span class="uppercase">${currentLetter.uppercase}</span>`;
        const lowerSpan = `<span class="lowercase">${currentLetter.lowercase}</span>`;
        this.letterElement.innerHTML = upperSpan + lowerSpan;
        
        // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
        this.hideLetterName();
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
        this.animateCardAppearance();
        
        console.log(`–ü–æ–∫–∞–∑–∞–Ω–∞ –±—É–∫–≤–∞: ${currentLetter.uppercase}${currentLetter.lowercase} (${currentLetter.name})`);
    }
    
    showLetterName() {
        if (!this.isNameVisible) {
            const currentLetter = this.shuffledLetters[this.currentIndex];
            this.letterNameElement.textContent = currentLetter.name;
            this.letterNameElement.classList.add('show');
            this.isNameVisible = true;
            
            console.log(`–ü–æ–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${currentLetter.name}`);
        } else {
            this.nextCard();
        }
    }
    
    hideLetterName() {
        this.letterNameElement.classList.remove('show');
        this.isNameVisible = false;
    }
    
    nextCard() {
        this.currentIndex = (this.currentIndex + 1) % this.shuffledLetters.length;
        
        // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–∏ –≤—Å–µ –±—É–∫–≤—ã, –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —Å–Ω–æ–≤–∞
        if (this.currentIndex === 0) {
            this.shuffleLetters();
            console.log('–¶–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω, –±—É–∫–≤—ã –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã –∑–∞–Ω–æ–≤–æ');
        }
        
        this.displayCurrentLetter();
    }
    
    prevCard() {
        this.currentIndex = this.currentIndex > 0 ? this.currentIndex - 1 : this.letters.length - 1;
        this.displayCurrentLetter();
    }
    

    
    animateCardAppearance() {
        this.flashcard.style.transform = 'scale(0.95)';
        this.flashcard.style.opacity = '0.8';
        
        setTimeout(() => {
            this.flashcard.style.transform = 'scale(1)';
            this.flashcard.style.opacity = '1';
        }, 100);
    }
    
    showCompletionMessage() {
        this.letterElement.innerHTML = '<span style="font-size: 0.4em; color: #48bb78;">üéâ</span>';
        this.letterNameElement.textContent = '–í—Å–µ –±—É–∫–≤—ã –∏–∑—É—á–µ–Ω—ã!';
        this.letterNameElement.classList.add('show');
        this.rememberBtn.style.display = 'none';
        console.log('–í—Å–µ –±—É–∫–≤—ã –∏–∑—É—á–µ–Ω—ã!');
    }
    
    rememberCurrentLetter() {
        if (this.shuffledLetters.length === 0) return;
        
        const currentLetter = this.shuffledLetters[this.currentIndex];
        
        // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –±—É–∫–≤—ã –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –º–∞—Å—Å–∏–≤–µ
        const originalIndex = this.letters.findIndex(letter => 
            letter.uppercase === currentLetter.uppercase && 
            letter.lowercase === currentLetter.lowercase
        );
        
        if (originalIndex !== -1) {
            this.rememberedLetters.add(originalIndex);
            console.log(`–ë—É–∫–≤–∞ –∑–∞–ø–æ–º–Ω–µ–Ω–∞: ${currentLetter.uppercase}${currentLetter.lowercase} (${currentLetter.name})`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            this.updateRememberButtonText();
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –±—É–∫–≤–µ
            this.nextCard();
        }
    }
    
    updateRememberButtonText() {
        const rememberedCount = this.rememberedLetters.size;
        if (rememberedCount > 0) {
            this.rememberBtn.textContent = `–ü–æ–º–Ω—é ${rememberedCount} –∏–∑ 41`;
        } else {
            this.rememberBtn.textContent = '–ü–æ–º–Ω—é';
        }
    }
    
    addEventListeners() {
        // –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
        this.flashcard.addEventListener('click', () => {
            this.showLetterName();
        });
        

        

        
        // –ö–Ω–æ–ø–∫–∞ "–ü–æ–º–Ω—é"
        this.rememberBtn.addEventListener('click', () => {
            this.rememberCurrentLetter();
        });
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        document.addEventListener('keydown', (event) => {
            switch (event.key) {
                case ' ':
                case 'Enter':
                    event.preventDefault();
                    this.showLetterName();
                    break;
                case 'ArrowRight':
                case 'ArrowDown':
                    event.preventDefault();
                    this.nextCard();
                    break;
                case 'ArrowLeft':
                case 'ArrowUp':
                    event.preventDefault();
                    this.prevCard();
                    break;
                case 'r':
                case 'R':
                case '–∫':
                case '–ö':
                    event.preventDefault();
                    this.rememberCurrentLetter();
                    break;
            }
        });
        
        console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
    const app = new ChurchSlavonicApp();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à–∞—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
    console.log('–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:');
    console.log('- –ü—Ä–æ–±–µ–ª/Enter: –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –±—É–∫–≤—ã');
    console.log('- –°—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ/–≤–Ω–∏–∑: —Å–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞');
    console.log('- –°—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ/–≤–≤–µ—Ä—Ö: –ø—Ä–µ–¥—ã–¥—É—â–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞');
});